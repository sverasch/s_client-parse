#!/usr/bin/env python3
#
# Copyright 2019 Simon E Vera-Schockner
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import sys
from s_client import OpenSSLSClientParser
from x509 import X509CertInfo, X509Zcertificate


def parse_options():
    parser = argparse.ArgumentParser(description='openssl-parse takes the output of a openssl s_client result and '
                                                 'returns a json object')
    parser.add_argument('--infile', '-i', nargs='?', type=argparse.FileType("r"),
                        help='the s_client file to be used, otherwise stdin', default=sys.stdin)
    parser.add_argument('--outfile', '-o', nargs='?', type=argparse.FileType("w"),
                        help='the output file to write to, otherwise stdout', default=sys.stdout)
    parser.add_argument('--parser', choices=['zcertificate', 'standard'],
                        default='zcertificate',
                        help='choose the parser used to parse the certificate information')
    args = parser.parse_args()
    return args


if __name__ == '__main__':
    args = parse_options()

    cert_parser = None
    if args.parser == 'standard':
        cert_parser = X509CertInfo
    elif args.parser == 'zcertificate':
        cert_parser = X509Zcertificate
    else:
        raise Exception("unknown parser %s" % cert_parser)

    parser = OpenSSLSClientParser(input=args.infile.readlines(), cert_parser=cert_parser)
    parser.parse_connection_info()
    output = parser.to_json()

    print(output)

    sys.exit(0)
